#// 1. Define the content variable used in the base template.
#set("content") {
    <h1>#(title)</h1>

#// 2. Create an HTML form. Set the method to POST. This means the browser sends the data to the same URL using a POST request when a user submits the form.
    <form method="post">
        #if(csrfToken) {
            <input type="hidden" name="csrfToken" value="#(csrfToken)">
        }
        #// 3. Create a group for the acronym’s short value. Use HTML’s <input> element to allow a user to insert text. The name property tells the browser what the key for this input should be when sending the data in the request.
        <div class="form-group">
            <label for="short">Acronym</label>
            <input type="text" name="short" class="form-control" id="short" #if(editing){value="#(acronym.short)"}/>
        </div>
        
        #// 4. Create a group for the acronym’s long value using HTML’s <input> element.
        <div class="form-group">
            <label for="long">Meaning</label>
            <input type="text" name="long" class="form-control" id="long" #if(editing){value="#(acronym.long)"}/>
        </div>
        
        #// 1. Define a new <div> for categories that’s styled with the form-group class.
            
        <div class="form-group">
            #// 2. Specify a label for the input.
            <label for="categories">Categories</label>
            #// 3. Define a <select> input to allow a user to specify categories. The multiple attribute lets a user specify multiple options. The name categories[] allows the form to send the categories as a URL-encoded array.
            <select name="categories[]" class="form-control"
                id="categories" placeholder="Categories" multiple="multiple">
                #if(editing) {
                    #// 1. If the editing flag is set, loop through the array of provided categories.
                    #for(category in categories) {
                    #// 2. Add each category as an <option> with the selected attribute set. This allows the category tags to be pre-populated when editing a form.
                        <option value="#(category.name)" selected="selected">
                            #(category.name)
                        </option>
                    }
                }
            </select>
        </div>
        #// 7. Create a submit button the user can click to send the form to your web app.
        <button type="submit" class="btn btn-primary">
            #if(editing){Update} else{Submit}
        </button>
    </form>
}

#embed("base")
